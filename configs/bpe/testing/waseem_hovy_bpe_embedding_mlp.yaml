program: experiments/torchtext_runner.py
command:
  - ${env}
  - python3
  - ${program}
  - "--tokenizer"
  - bpe
  - "--experiment"
  - word
  - "--encoding"
  - index
  - "--model"
  - mlp
  - "--main"
  - waseem_hovy
  - "--aux"
  - davidson
  - "--gpu"
  - 0
  - "--patience"
  - 15
  - "--layers"
  - 1
  - "--datadir"
  - data/json/
  - "--results"
  - results/
  - "--save_model"
  - results/models/
  - "--shuffle"
  - True
  - "--cleaners"
  - username
  - hashtag
  - url
  - lower
  - "--metrics"
  - f1
  - accuracy
  - precision
  - recall
  - "--optimizer"
  - adam
  - "--loss"
  - nlll
  - "--seed"
  - 42
  - "--loss_weights"
  - 1.0
  - 0.5
  - "--batches_epoch"
  - 300
method: bayes

metric:
  goal: maximize
  name: dev_f1-score

parameters:
  epochs:
    values: [50, 100, 200]
  batch_size:
    values: [16, 32, 64]
  embedding:
    values: [100, 300]
  hidden:
    values: ["100,100,100,100,100,100,100", "300,300,300,300,300,300,300"]
  shared:
    values: [64, 128, 256]
  learning_rate:
    distribution: uniform
    min: 0.00001
    max: 1.0
  dropout:
    distribution: uniform
    min: 0.0
    max: 0.5
